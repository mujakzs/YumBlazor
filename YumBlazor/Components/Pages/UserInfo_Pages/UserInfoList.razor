@page "/UserInfo"
@inject IUserInfoRepository _userInfoRepo
@inject IJSRuntime _js
@using YumBlazor.Components.Shared
@using YumBlazor.Services.Extension

<BsModal OnModalConfirmation="ConfirmDelete_Click" ButtonBootstrapStyle="btn-danger"
    ButtonText="Delete"
    Title="Delete This User Info?">

</BsModal>

@if (IsLoading)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">User List</h2>
                </div>
            </div>
        </div>

        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="UserList/CreateUser" class="btn btn-lg btn-secondary" style="width:250px"> 
                        <i class="bi bi-plus-square"> 
                            Add User Info
                        </i>
                    </a>
                </div>
            </div>
            @if (UserDetails.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var usr in UserDetails)
                        {
                            <tr>
                                <td>@usr.FirstName</td>
                                <td>@usr.LastName</td>
                                <td>@usr.Email</td>
                                <td>@usr.Phone</td>
                                <td>
                                    <a href="@($"UserList/UpdateUser/{usr.Id}")"
                                    class="btn btn-primary">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <button class="btn btn-danger" @onclick="()=>DelUser(usr.Id)">
                                        <i class="bi bi-trash"></i> Delete 
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}




@code {
    private bool IsLoading { get; set; } = true;

    private int DeleteUserId { get; set; } = 0;

    private IEnumerable<UserInfo> UserDetails { get; set; } = new List<UserInfo>();


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadUserInfo();
            IsLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadUserInfo()
    {
        UserDetails = await _userInfoRepo.GetAllAsync();
    }

    private void DelUser(int id)
    {
        DeleteUserId = id;
        _js.InvokeVoidAsync("ShowConfirmationModal");

    }

    private async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsLoading = true;
        await _js.InvokeVoidAsync("HideConfirmationModal");
        if (isConfirmed && DeleteUserId != 0)
        {
            var result = await _userInfoRepo.DeleteAsync(DeleteUserId);
            if (result)
                _js?.ToastrSuccess("Category Delete Successfully");

            else
                _js?.ToastrError("Error Encountered while deleting");


            await LoadUserInfo();
        }
        DeleteUserId = 0;
        IsLoading = false;
    }
   

}
